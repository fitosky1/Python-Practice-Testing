"""
Data structures
Mixed command for lists
Multidimensional lists ~ Arrays
"""
import numpy

# import random
#
# list1 = list(range(10))
# print("list1", list1)
# list1.sort(reverse=True)
# print("reversed list1", list1)
#
# create matrices before numpy. i.e. multidimensional lists
# cuadratic (MIND the "[]")
matrix1 = [list(range(5))] * 5
print("matrix1:", matrix1)
# more columns than rows
matrix2 = [[1, 2, 3], [4, 5, 6]]
print("matrix2:", matrix2)
# more rows than columns
matrix3 = [[1, 2], [3, 4], [5, 6]]
print("matrix3:", matrix3)
#
# CUSTOM matrices
rw1 = int(input("number of rows ?\n"))
cl1 = int(input("number of columns ?\n"))

matrix4 = [list(range(cl1))] * rw1
print("simple matrix as multi-list:", matrix4)
print(type(matrix4))
# testing output as np array
ar4 = numpy.asarray(matrix4)
print("simple matrix as array:\n", ar4)
print(type(ar4))
# remove within list
# matrix4[[2][0]]
# VERY TRICKY!!!! if list is generated by [list]*n will NOT WORK
matrix2[1].remove(matrix2[1][2])
print("new matrix2", matrix2)
#
